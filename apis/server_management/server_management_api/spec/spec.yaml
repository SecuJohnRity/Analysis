openapi: '3.0.0'
info:
  description: |
    The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser,
    command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this
    heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI.
    Use the Wazuh API to easily perform everyday actions like adding an agent or restarting the agent(s).

    # Authentication

    Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token.
    JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting
    information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate`
    and obtain a JWT token to run any endpoint.

    JWT tokens have a default duration of 900 seconds. To change this value, you must modify the API configuration.

    Login with USER and PASSWORD:

    `curl -u <USER>:<PASSWORD> -k -X POST "https://<HOST_IP>:55000/security/user/authenticate"`
    ```json
    {
        "data": {
            "token": "<YOUR_JWT_TOKEN>"
        },
        "error": 0
    }
    ```
    Use the token from the previous response to perform any endpoint request:

    `curl -k -X <METHOD> "https://<HOST_IP>:55000/<ENDPOINT>" -H  "Authorization: Bearer <YOUR_JWT_TOKEN>"`

    <SecurityDefinitions />

  version: '6.0.0'
  x-revision: 'alpha0'
  title: 'Server Management API REST'
  license:
    name: 'GPL 2.0'
    url: 'https://github.com/wazuh/wazuh/blob/v6.0.0/LICENSE'

servers:
  - url: '{protocol}://{host}:{port}'
    variables:
      protocol:
        default: https
        enum:
          - http
          - https
      host:
        default: localhost
      port:
        default: '55000'

x-rbac-catalog:
  resources:
    '*:*':
      description: "Resource applied in functions acting on resources that do not yet exist in the system. We call these
      functions, resourceless functions"
    'agent:group':
      description: "Reference agents via group name (i.e. agent:group:web)"
    'agent:id':
      description: "Reference agents via agent ID (i.e. agent:id:001)"
    'group:id':
      description: "Reference agent groups via group ID (i.e. group:id:default)"
  actions:
    'agent:create':
      description: "Create new agents"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['agent:create']
        resources: ['*:*:*']
        effect: "allow"
    'agent:read':
      description: "Access agents information (id, name, group, last keep alive, etc)"
      resources:
        - $ref: '#/x-rbac-catalog/resources/agent:id'
        - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:read']
        resources: ['agent:id:*']
        effect: "allow"
    'agent:delete':
      description: "Delete agents"
      resources:
        - $ref: '#/x-rbac-catalog/resources/agent:id'
        - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:delete']
        resources: ['agent:id:010', 'agent:group:pacific']
        effect: "allow"
    'agent:modify_group':
      description: "Change the group of agents"
      resources:
       - $ref: '#/x-rbac-catalog/resources/agent:id'
       - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:modify_group']
        resources: ['agent:id:004', 'agent:group:us-east']
        effect: "allow"
    'group:modify_assignments':
      description: "Change the agents assigned to the group"
      resources:
       - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:modify_assignments']
        resources: ['group:id:*']
        effect: "allow"
    'agent:reconnect':
      description: "Force reconnect agents"
      resources:
        - $ref: '#/x-rbac-catalog/resources/agent:id'
        - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: [ 'agent:reconnect' ]
        resources: [ 'agent:id:050', 'agent:id:049' ]
        effect: "deny"
    'agent:restart':
      description: "Restart agents"
      resources:
       - $ref: '#/x-rbac-catalog/resources/agent:id'
       - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:restart']
        resources: ['agent:id:050', 'agent:id:049']
        effect: "deny"
    'group:create':
      description: "Create new agent groups"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['group:create']
        resources: ['*:*:*']
        effect: "allow"
    'group:read':
      description: "Access agent groups information (id, name, agents, etc)"
      resources:
        - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:create']
        resources: ['group:id:*']
        effect: "allow"
    'group:update_config':
      description: "Change the configuration of agent groups"
      resources:
        - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:update_config']
        resources: ['group:id:*']
        effect: "deny"
    'group:delete':
      description: "Delete agent groups"
      resources:
        - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:delete']
        resources: ['group:id:*']
        effect: "allow"

components:
  responses:
    ResponseError:
      description: "Response to report a bad request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Bad Request"
            detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating 'format' in schema['items']:
            {'description': '{parameter_name}', 'format': '{expected_format}', 'minLength': {expected_length}, 'type':
            '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"

    PermissionDeniedResponse:
      description: "Response to report a permission denied request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: "Permission Denied"
            detail: "Permission denied: Resource type: *:*"
            remediation: "Please, make sure you have permissions to execute the current request. For more information
            on how to set up permissions, please visit
            https://documentation.wazuh.com/6.0/user-manual/api/rbac/configuration.html"
            error: 4000

    UnauthorizedResponse:
      description: "Response to report an unauthorized request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Unauthorized"
            detail: "No authorization token provided"

    InvalidCredentialsResponse:
      description: "Response to report a problem with authentication"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Unauthorized"
            detail: "Invalid credentials"

    InvalidHTTPMethodResponse:
      description: "Response to report an invalid HTTP method"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Method Not Allowed"
            detail: "Specified method is invalid for this resource"

    WrongContentTypeResponse:
      description: "Response to report an invalid content-type"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Wazuh Error"
            detail: "The body type is not the one specified in the content-type"
            error: 6002

    RequestTooLargeResponse:
      description: "Maximum request body size exceeded"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Request Entity Too Large"
            detail: "Maximum request body size 1048576 exceeded, actual body size 1225245"

    TooManyRequestsResponse:
      description: "Maximum number of request per minute reached"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Wazuh Error"
            detail: "Maximum number of requests per minute reached"
            remediation: "This limit can be changed in api.yaml file. More information here:
            https://documentation.wazuh.com/6.0/user-manual/api/security/configuration.html"
            code: 6001

    ResourceNotFoundResponse:
      description: "Resource not found"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: "Resource Not Found"
            detail: "The group does not exist"
            remediation: "Please, use `GET /groups` to find all available groups:
            https://documentation.wazuh.com/6.0/user-manual/api/rbac/configuration.html"
            code: 1710

  schemas:
    ## Common models
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: "Human readable description to explain the result of the request"

    SimpleApiError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          additionalProperties:
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              remediation:
                type: string
        id:
          type: array
          items:
            oneOf:
              - type: string
              - type: integer

    ApiError:
      type: object
      required:
        - title
        - detail
      nullable: true
      properties:
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
          format: uri
        code:
          type: integer
          format: int32
        remediation:
          type: string

    RequestError:
      type: object
      required:
        - title
        - detail
      nullable: true
      properties:
        title:
          type: string
        detail:
          type: string
        error:
          type: integer
          format: int32

    AllItemsResponse:
      type: object
      required:
        - total_affected_items
        - failed_items
        - total_failed_items
      properties:
        total_affected_items:
          type: integer
          format: int32
          description: "Number of items that have successfully applied the requested operation"
        failed_items:
          type: array
          description: "List of items that have failed applying the requested operation"
          items:
            $ref: '#/components/schemas/SimpleApiError'
        total_failed_items:
          type: integer
          format: int32
          description: "Number of items that have failed applying the requested operation"

    AllItemsResponseAgents:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/Agent'

    AllItemsResponseGroups:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/AgentGroup'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseAgentIDs:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/AgentID'
        - $ref: '#/components/schemas/AllItemsResponse'

    BasicInfo:
      type: object
      properties:
        title:
          type: string
          description: "API title name"
        api_version:
          type: string
          description: "API version in the manager"
        revision:
          type: string
          description: "API revision"
        license_name:
          type: string
          description: "API license name"
        license_url:
          type: string
          description: "API license url"
        hostname:
          type: string
          description: "Server hostname"
        timestamp:
          type: string

    ## Agents models
    Agent:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AgentID'
        name:
          type: string
          description: "Agent name used at the enrollment process"
        groups:
          type: array
          description: "List of groups the agent belongs to"
          items:
            type: string
        type:
          type: string
          description: "Type of agent"
        version:
          type: string
          description: "Wazuh version the agent has installed"
        last_login:
          type: string
          description: "The last time the agent has authenticated with the server"
        is_connected:
          type: boolean
          description: "Whether the agent is currently connected or not"
        host:
          type: object
          properties:
            architecture:
              type: string
            hostname:
              type: string
            ip:
              type: array
              items:
                type: string
            os:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                version:
                  type: string

    AgentAddBody:
      type: object
      properties:
        id:
          description: "Agent id"
          type: string
          format: uuid4
        name:
          description: "Agent name"
          type: string
          format: names
        key:
          description: "Agent authentication key"
          type: string
          format: alphanumeric_symbols
        type:
          description: "Agent type"
          type: string
        version:
          description: "Agent version"
          type: string
        host:
          description: "Agent host"
          type: object
          properties:
            architecture:
              type: string
            hostname:
              type: string
            ip:
              type: array
              items:
                type: string
            os:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                version:
                  type: string
      required:
      - id
      - name
      - key
      - type
      - version

    AgentGroup:
      type: object
      properties:
        name:
          type: string
        configSum:
          type: string
          format: hash
          description: "MD5 checksum of the group configuration file (agent.conf)"

    AgentGroupDeleted:
      type: object
      required:
      - affected_items
      properties:
        affected_items:
          type: array
          description: "List of removed groups, agents belonging exclusively to the removed groups will be reassigned to group default"

    AgentStatus:
      type: string
      enum:
      - active
      - pending
      - never_connected
      - disconnected
      description: "Agent status. It is calculated based on the last keepalive and the Wazuh version"

    AgentID:
      type: string
      description: "Agent ID"
      format: uuid4

    AgentIDListAll:
      type: string
      minLength: 3
      description: "Agent ID|all"
      format: uuid

    ## Group models
    GroupID:
      type: string
      description: "Group name"
      format: group_names

    GroupIDListAll:
      type: string
      minLength: 1
      description: "Group name|all"
      format: group_names_or_all

    GroupConfiguration:
      type: object
      properties:
        filters:
          type: object
          properties:
            os:
              type: string
              description: "OS family where the configuration is being applied"
            name:
              type: string
              description: "The name of the agent where that configuration is being applied"
            profile:
              type: string
              description: "Profile name. Any agent configured to use the defined profile may use the block"
        config:
          type: object
          description: "Group configuration. The fields on this object depend on the actual group configuration"
      required:
        - filters
        - config

    CreateGroupBody:
      type: object
      properties:
        group_id:
          description: "Group name. It can contain any of the characters between a-z, A-Z, 0-9, '_', '-' and '.'. Names '.' and '..' are restricted."
          type: string
          format: group_names
          maxLength: 128
      required:
        - group_id
      example:
        group_id: NewGroup_1

    DaemonStatus:
      type: string
      enum:
      - stopped
      - running

    Token:
      type: object
      properties:
        token:
          type: string
          description: "User's JWT token"

    WazuhLogs:
      type: object
      properties:
        description:
          type: string
          description: "Log message"
        level:
          type: string
          description: "Log level"
          enum:
            - critical
            - debug
            - debug2
            - error
            - info
            - warning
        tag:
          type: string
          format: alphanumeric
          description: "Wazuh component that logged the event"
        timestamp:
          type: string
          format: date-time

    LogSummary:
      type: object
      properties:
        all:
          type: integer
          format: int32
          minimum: 0
        critical:
          type: integer
          format: int32
          minimum: 0
        debug:
          type: integer
          format: int32
          minimum: 0
        error:
          type: integer
          format: int32
          minimum: 0
        info:
          type: integer
          format: int32
          minimum: 0
        warning:
          type: integer
          format: int32
          minimum: 0

    ConfirmationMessage:
      type: object
      properties:
        message:
          type: string
          description: "Confirmation message"

    NewVersions:
      type: object
      properties:
        last_check_date:
          type: string
          description: "Datetime of the last query to the CTI service"
        current_version:
          type: string
          description: "Current version in the format vX.Y.Z"
        update_check:
          type: boolean
          description: "Flag that indicates if the service is enabled"
        last_available_major:
          type: object
          description: "Information about the most recent available major update"
          properties:
            tag:
              type: string
              description: "Version in the format vX.Y.Z"
            description:
              type: string
            title:
              type: string
            published_date:
              type: string
            semver:
              type: object
              properties:
                major:
                  type: integer
                  format: int32
                minor:
                  type: integer
                  format: int32
                patch:
                  type: integer
                  format: int32
        last_available_minor:
          type: object
          description: "Information about the most recent available minor update"
          properties:
            tag:
              type: string
              description: "Version in the format vX.Y.Z"
            description:
              type: string
            title:
              type: string
            published_date:
              type: string
            semver:
              type: object
              properties:
                major:
                  type: integer
                  format: int32
                minor:
                  type: integer
                  format: int32
                patch:
                  type: integer
                  format: int32
        last_available_patch:
          type: object
          description: "Information about the most recent available patch update"
          properties:
            tag:
              type: string
              description: "Version in the format vX.Y.Z"
            description:
              type: string
            title:
              type: string
            published_date:
              type: string
            semver:
              type: object
              properties:
                major:
                  type: integer
                  format: int32
                minor:
                  type: integer
                  format: int32
                patch:
                  type: integer
                  format: int32
        uuid:
          type: string
          description: "Identifier of the Wazuh instance"

    SecurityConfiguration:
      type: object
      minProperties: 1
      properties:
        auth_token_exp_timeout:
          description: "Time in seconds until the token expires"
          type: integer
          format: int32
          minimum: 30
          example: 900
        rbac_mode:
          description: "RBAC mode (white/black)"
          type: string
          enum: [white, black]
          example: white

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: "Intended method to get a token"
      x-basicInfoFunc: server_management_api.authentication.check_user
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: server_management_api.authentication.decode_token

  parameters:
    agent_id:
      in: path
      name: agent_id
      description: "Agent ID. All possible values from 001 onwards"
      required: true
      schema:
        $ref: '#/components/schemas/AgentID'
    agent_name:
      in: query
      name: agent_name
      description: "Agent name. The special characters allowed are: '-','_','.' "
      required: true
      schema:
        type: string
        format: names
        maxLength: 128
    description:
      in: query
      name: description
      description: "Filter by policy description"
      schema:
        type: string
        format: alphanumeric_symbols
    error:
      in: query
      name: error
      description: "Filter by encountered errors"
      schema:
        type: integer
        format: int32
        minimum: 0
    fail:
      in: query
      name: fail
      description: "Filter by failed checks"
      schema:
        type: integer
        format: int32
        minimum: 0
    fields:
      in: query
      name: fields
      description: "List of fields affecting the operation"
      schema:
        type: array
        items:
          type: string
          format: names
    filename:
      in: query
      name: filename
      description: "Filter by filename"
      schema:
        type: array
        items:
          type: string
          format: alphanumeric
    full_path_filter:
      in: query
      name: file
      description: "Filter by full path"
      schema:
        type: string
        format: paths
    file_name:
      in: path
      name: file_name
      description: "Filename"
      required: true
      schema:
        type: string
        format: alphanumeric
    file_format:
      in: query
      name: format
      description: "Filter by file format. For example 'deb' will output deb files"
      schema:
        type: string
        format: alphanumeric
    group_id:
      in: path
      name: group_id
      description: "Group ID. (Name of the group)"
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    group_id_query:
      in: query
      name: group_id
      description: "Group ID. (Name of the group)"
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    agent_group:
      in: query
      name: group
      description: "Filter by group of agents"
      schema:
        $ref: '#/components/schemas/GroupID'
    hash:
      in: query
      name: hash
      description: "Select algorithm to generate the returned checksums"
      schema:
        type: string
        enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
          - blake2b
          - blake2s
          - sha3_224
          - sha3_256
          - sha3_384
          - sha3_512
    limit:
      in: query
      name: limit
      description: "Maximum number of elements to return. Although up to 100.000 can be specified, it is recommended not to exceed 500 elements. Responses may be slower the more this number is exceeded. "
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 100000
    log_lines:
      in: query
      name: limit
      description: "Maximum number of lines to return."
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 500
    agents_list:
      in: query
      name: agents_list
      description: "List of agent IDs (separated by comma), all agents selected by default if not specified"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentID'
    agents_list_all:
      in: query
      name: agents_list
      description: "List of agent IDs (separated by comma), use the keyword `all` to select all agents"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentIDListAll'
    groups_list:
      in: query
      name: groups_list
      description: "List of group IDs (separated by comma), all groups selected by default if not specified"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupID'
    groups_list_all:
      in: query
      name: groups_list
      description: "List of group IDs (separated by comma), use the keyword 'all' to select all groups"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupIDListAll'
    module:
      in: query
      name: module
      description: "Show results filtered by module"
      schema:
        type: string
        format: alphanumeric
    name:
      in: query
      name: name
      description: "Filter by name"
      schema:
        type: string
        format: alphanumeric
    type:
      in: query
      name: type
      description: "Filter by name"
      schema:
        type: string
        format: alphanumeric
    notchecked:
      in: query
      name: notchecked
      description: "Filter by not checked"
      schema:
        type: integer
        format: int32
        minimum: 0
    offset:
      in: query
      name: offset
      description: "First element to return in the collection"
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    olderThanParam:
      in: query
      name: older_than
      description: "Filter out agents whose time lapse from last keep alive signal is longer than specified. Time in
      seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™. For never_connected agents, uses the
      enrollment date. For example, `7d`, `10s` and `10` are valid values. If no time unit is specified,
      seconds are used"
      schema:
        type: string
        format: timeframe
    pass:
      in: query
      name: pass
      description: "Filter by passed checks"
      schema:
        type: integer
        format: int32
        minimum: 0
    pretty:
      in: query
      name: pretty
      description: "Show results in human-readable format"
      schema:
        type: boolean
        default: false
    process:
      in: query
      name: process
      description: "Filter by process name"
      schema:
        type: string
        format: alphanumeric
    profile:
      in: query
      name: profile
      description: "Filter by evaluated profile"
      schema:
        type: string
        format: alphanumeric
    endpoint:
      in: query
      name: endpoint
      description: "Look for the RBAC actions which are related to the specified endpoint"
      schema:
        type: string
    purge:
      in: query
      name: purge
      description: "Permanently delete an agent from the key store"
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: "Query to filter results by. For example q=&quot;status=active&quot;"
      schema:
        type: string
    rationale:
      in: query
      name: rationale
      description: "Filter by rationale"
      schema:
        type: string
        format: alphanumeric_symbols
    raw:
      in: query
      name: raw
      description: "Format response in plain text"
      required: False
      schema:
        type: boolean
    registry:
      in: query
      name: registry
      description: "Filter by registry"
      schema:
        type: string
        format: alphanumeric
    references:
      in: query
      name: references
      description: "Filter by references"
      schema:
        type: string
    remediation:
      in: query
      name: remediation
      description: "Filter by remediation"
      schema:
        type: string
        format: alphanumeric_symbols
    result:
      in: query
      name: result
      description: "Filter by result"
      schema:
        type: string
        format: alphanumeric
    condition:
      in: query
      name: condition
      description: "Filter by condition"
      schema:
        type: string
    reason:
      in: query
      name: reason
      description: "Filter by reason"
      schema:
        type: string
        format: alphanumeric_symbols
    score:
      in: query
      name: score
      description: "Filter by final score"
      schema:
        type: integer
        format: int32
        minimum: 0
    search:
      in: query
      name: search
      description: "Look for elements containing the specified string. To obtain a complementary search, use '-' at the
      beginning"
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: "Select which fields to return (separated by comma). Use '.' for nested fields. For example,
      '{field1: field2}' may be selected with 'field1.field2'"
      schema:
        type: array
        items:
          type: string
          format: names
    # It'd be more appropriate to be an array of strings, and separate the ascending or descending order in another param
    sort:
      in: query
      name: sort
      description: "Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in
      ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with
      'field1.field2'"
      schema:
        type: string
        format: sort
    status:
      in: query
      name: status
      description: "Filter by status"
      schema:
        type: string
        format: alphanumeric
    title:
      in: query
      name: title
      description: "Filter by title"
      schema:
        type: string
        format: alphanumeric_symbols
    allow_run_as:
      in: query
      name: allow_run_as
      description: "Value for the allow_run_as flag"
      schema:
        type: boolean
        default: false
    unknown:
      in: query
      name: unknown
      description: "Filter by unknown results"
      schema:
        type: integer
        format: int32
    version:
      in: query
      name: version
      description: "Filter by agents version using one of the following formats: 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
      schema:
        type: string
        format: alphanumeric
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: "Disable timeout response"
      schema:
        type: boolean
        default: false
    section:
      in: query
      name: section
      description: "Indicates the wazuh configuration section"
      schema:
        type: string
        enum:
        - active-response
        - agentless
        - alerts
        - auth
        - client
        - client_buffer
        - command
        - database_output
        - email_alerts
        - global
        - integration
        - labels
        - localfile
        - logging
        - remote
        - reports
        - rootcheck
        - sca
        - socket
        - syscheck
        - syslog_output
        - vulnerability-detection
        - indexer
        # Wodle sections
        - aws-s3
        - azure-logs
        - cis-cat
        - docker-listener
        - open-scap
        - osquery
        - syscollector
    field:
      in: query
      name: field
      description: "Indicate a section child."
      schema:
        type: string
        format: names
    tag:
      in: query
      name: tag
      description: "Wazuh component that logged the event"
      schema:
        type: string
        format: alphanumeric
    log_level:
      in: query
      name: level
      description: "Filter by log level"
      schema:
        type: string
        enum:
          - critical
          - debug
          - debug2
          - error
          - info
          - warning
    distinct:
      in: query
      name: distinct
      description: Look for distinct values.
      schema:
        type: boolean
        default: false
    os.full:
      in: query
      name: os.full
      description: "Filter by OS"
      schema:
        type: string
        format: alphanumeric_symbols
    remote.ip:
      in: query
      name: remote.ip
      description: "Filter by Remote IP"
      schema:
        type: string
        format: alphanumeric
    older_than:
      in: query
      name: older_than
      description: "Consider only agents whose last keep alive is older than the specified time frame. For
      never_connected agents, enrollment date is considered instead of last keep alive. For example, `7d`, `10s` and `10`
      are valid values. When no time unit is specified, seconds are assumed. Use 0s to select all agents"
      schema:
        type: string
        format: timeframe
        default: 7d
    ip:
      in: query
      name: ip
      description: "Filter by the IP used by the agent to communicate with the manager. If it's not available, it will
      have the same value as registerIP"
      schema:
        type: string
        format: alphanumeric
    registerIP:
      in: query
      name: registerIP
      description: "Filter by the IP used when enrolling the agent"
      schema:
        type: string
        format: alphanumeric
    force_single_group:
      in: query
      name: force_single_group
      description: "Removes the agent from all groups to which it belongs and assigns it to the specified group"
      schema:
        type: boolean
    use_http:
      in: query
      name: use_http
      description: "Use http protocol. If it's false use https. By default the value is set to false"
      schema:
        type: boolean
        default: false
    force_query:
      in: query
      name: force_query
      description: "Force query to CTI service"
      schema:
        type: boolean
        default: false
    value.name:
      in: query
      name: value.name
      description: "Filter by value name"
      schema:
        type: string
        format: alphanumeric
    value.type:
      in: query
      name: value.type
      description: "Filter by value type"
      schema:
        type: string
        format: alphanumeric
    is_connected:
      in: query
      name: is_connected
      description: "Agent connection status"
      schema:
        type: boolean

tags:
  - name: API Info
    description: "Wazuh API information"
  - name: Agents
    description: "Agents management related operations"
  - name: Groups
    description: "Group of agents and centralized configurations"
  - name: Overview
    description: "Overview of Wazuh"
  - name: SCA
    description: "Policy monitoring"
  - name: Security
    description: "Roles administration and user authentication management"
  - name: Events
    description: "Ingestion endpoints"

security:
  - jwt: []

paths:
  /:
    get:
      tags:
        - API Info
      summary: 'Get API info'
      description: "Return basic information about the API"
      operationId: server_management_api.controllers.default_controller.default_info
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: "API default information"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BasicInfo'
              example:
                title: "Wazuh API"
                api_version: "v4.5.0"
                revision: 'alpha0'
                license_name: "GPL 2.0"
                license_url: "https://github.com/wazuh/wazuh/blob/v6.0.0/LICENSE"
                hostname: "wazuh"
                timestamp: "2019-04-02T08:08:11Z"

  /agents:
    delete:
      tags:
        - Agents
      summary: "Delete agents"
      description: "Delete all agents or a list of them based on optional criteria"
      operationId: server_management_api.controllers.agent_controller.delete_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:delete'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list_all'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/agent_group'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/olderThanParam'
        - $ref: '#/components/parameters/is_connected'
        - $ref: '#/components/parameters/remote.ip'
        - $ref: '#/components/parameters/os.full'
      responses:
        '200':
          description: "Delete agents"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '019008da-1575-7375-b54f-ef43e393517ef'
                    - '019008da-1575-7375-b54f-ef43e393517eg'
                    - '019008da-1575-7375-b54f-ef43e393517eh'
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: 'All selected agents were deleted'
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    get:
      tags:
        - Agents
      summary: "List agents"
      description: "Return information about all available agents or a list of them"
      operationId: server_management_api.controllers.agent_controller.get_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/agent_group'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/olderThanParam'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/is_connected'
        - $ref: '#/components/parameters/remote.ip'
        - $ref: '#/components/parameters/os.full'
      responses:
        '200':
          description: "List of agents or error description"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - id: '019008da-1575-7375-b54f-ef43e393517ef'
                      name: ac7cb188d538
                      groups: [default]
                      type: agent
                      version: v5.0.0
                      last_login: 2024-05-26T12:40:08Z
                      is_connected: true
                      host:
                        ip: 172.25.0.1
                        os:
                          full: Ubuntu 24.04.1 LTS (Noble Numbat)
                    - id: '019008da-1575-7375-b54f-ef43e393517eg'
                      name: bc7ch188d538
                      groups: [default]
                      type: agent
                      version: v5.0.0
                      last_login: 2024-05-26T12:40:08Z
                      is_connected: true
                      host:
                        ip: 172.25.0.2
                        os:
                          full: Ubuntu 24.04.1 LTS (Noble Numbat)
                    - id: '019008da-1575-7375-b54f-ef43e393517eh'
                      name: zc7c7188d538
                      groups: [default]
                      type: agent
                      version: v5.0.0
                      last_login: 2024-05-26T12:40:08Z
                      is_connected: true
                      host:
                        ip: 172.25.0.3
                        os:
                          full: Ubuntu 24.04.1 LTS (Noble Numbat)
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: 'All selected agents information was returned'
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    post:
      tags:
        - Agents
      summary: "Add agent"
      description: "Add a new agent"
      operationId: server_management_api.controllers.agent_controller.add_agent
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:create'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAddBody'
            example:
              id: 019008da-1575-7375-b54f-ef43e393517ef
              name: NewHost_2
              key: 7b8276c3bf96aff5709346d368f04fed
              type: endpoint
              version: 5.0.0
              host:
                architecture: x86_64
                hostname: wazuh-agent
                ip:
                  - 127.0.0.1
                os:
                  name: Debian
                  type: Linux
                  version: 12 "Bookworm"
      responses:
        '201':
          description: "Empty response indicating the agent was enrolled successfully"
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/{agent_id}/restart:
    put:
      tags:
        - Agents
      summary: "Restart agent"
      description: "Restart the specified agent"
      operationId: server_management_api.controllers.agent_controller.restart_agent
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: "Agent restarted"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                      - "0191be8b-dbdd-7ce7-afd2-4d81993f73c4"
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "Restart command was sent to all agents"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/group:
    delete:
      tags:
        - Agents
      summary: "Remove agents from group"
      description: "Remove all agents assignment or a list of them from the specified group"
      operationId: server_management_api.controllers.agent_controller.delete_multiple_agent_single_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
        - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list_all'
        - $ref: '#/components/parameters/group_id_query'
      responses:
        '200':
          description: "Remove multiple agents assignment from a single group"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '0191c764-831f-7ca5-b4e7-d5aec5fbbae2'
                    - '0191c764-831f-7830-aed7-dc45622ddb28'
                    - '0191c764-831f-726f-bcb1-63d2d37632e2'
                    - '0191c764-831f-7b11-9e25-983a0cdb643f'
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: "All selected agents were removed from group group1"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
        - Agents
      summary: "Assign agents to group"
      description: "Assign all agents or a list of them to the specified group"
      operationId: server_management_api.controllers.agent_controller.put_multiple_agent_single_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
        - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
        - $ref: '#/components/parameters/group_id_query'
        - $ref: '#/components/parameters/force_single_group'
      responses:
        '200':
          description: "Assign multiple agents to a single group"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '0191c764-218c-773c-a032-4f68bbe29a33'
                    - '0191c764-218c-7cd9-81c6-429fd82db675'
                  failed_items:
                    - error:
                        code: 1701
                        message: Agent does not exist
                        remediation: Please, use `GET /agents?select=id,name` to find all available agents
                      id:
                        - '0191c764-218c-7d8b-9b8c-d60e7b81846d'
                  total_affected_items: 2
                  total_failed_items: 1
                  message: Some agents were not assigned to group2 and removed from the other groups
                  error: 2
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/reconnect:
    put:
      tags:
        - Agents
      summary: "Force reconnect agents"
      description: "Force reconnect all agents or a list of them"
      operationId: server_management_api.controllers.agent_controller.reconnect_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:reconnect'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
      responses:
        '200':
          description: "Agents reconnected"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                      - '001'
                      - '002'
                      - '003'
                    total_affected_items: 3
                    total_failed_items: 0
                    failed_items: []
                  message: "Force reconnect command was sent to all agents"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/restart:
    put:
      tags:
        - Agents
      summary: "Restart agents"
      description: "Restart all agents or a list of them"
      operationId: server_management_api.controllers.agent_controller.restart_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
      responses:
        '200':
          description: "Agents restarted"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                          $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                      - '0191be8b-dbdd-7ce7-afd2-4d81993f73c4'
                      - '0191bed5-688b-7c7c-8a65-564aca95ea0d'
                      - '0191bed5-90a2-7240-87e2-2399a08c959b'
                      - '0191bed5-cf10-7492-b69f-6de8ea3e3d59'
                    total_affected_items: 4
                    total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /groups:
    delete:
      tags:
        - Groups
      summary: "Delete groups"
      description: "Delete all groups or a list of them"
      operationId: server_management_api.controllers.agent_controller.delete_groups
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:delete'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/groups_list_all'
      responses:
        '200':
          description: "Remove multiple group from multiple agents"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                data:
                  affected_items:
                    - webserver
                    - dataserver
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                  message: "All selected groups were deleted"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    get:
      tags:
        - Groups
      summary: "Get groups"
      description: "Get information about all groups or a list of them. Returns a list containing basic information
      about each group such as number of agents belonging to the group and the checksums of the configuration and
      shared files"
      operationId: server_management_api.controllers.agent_controller.get_list_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/groups_list'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "List all groups"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseGroups'
              example:
                data:
                  affected_items:
                    - name: default
                      configSum: ab73af41699f13fdd81903b5f23d8d00
                    - name: dmz
                      configSum: cfbae9ecc10eb15f1b4fc736de6758cc
                    - name: pciserver
                      configSum: ab73af41699f13fdd81903b5f23d8d00
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: "All selected groups information was returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    post:
      tags:
        - Groups
      summary: "Create a group"
      description: "Create a new group"
      operationId: server_management_api.controllers.agent_controller.post_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:create'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupBody'
      responses:
        '200':
          description: "Add new agent"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group 'NewGroup_1' created"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /groups/{group_id}/agents:
    get:
      tags:
        - Groups
      summary: "Get agents in a group"
      description: "Return the list of agents that belong to the specified group"
      operationId: server_management_api.controllers.agent_controller.get_agents_in_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:read'
        - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "List of agents or error description"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - id: 0191bcd6-d5d9-7688-8e4e-a51caa5847a8
                      groups:
                        - default
                        - group1
                      name: b2497efbf876
                      type: endpoint
                      version: Wazuh v5.0.0
                      last_login: 2024-08-27T10:03:23Z
                    - id: 0191c761-fd0d-76e3-a0e2-016e9ea453cc
                      groups:
                        - default
                        - group2
                      name: 600e27371700
                      type: endpoint
                      version: Wazuh v5.0.0
                      last_login: 2024-08-27T09:23:52Z
                    - id: 01912d07-b9b4-7528-bdad-15da902d651c
                      groups:
                        - default
                        - group3
                      name: 4bdac19ce5e3
                      type: endpoint
                      version: Wazuh v5.0.0
                      last_login: 2024-08-27T12:16:44Z
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: "All selected agents information was returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /groups/{group_id}/configuration:
    get:
      tags:
        - Groups
      summary: "Get group configuration"
      description: "Return a group's configuration"
      operationId: server_management_api.controllers.agent_controller.get_group_config
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: "Get group configuration"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      affected_items:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupConfiguration'
                      total_affected_items:
                        type: integer
                        format: int32
              example:
                data:
                  total_affected_items: 3
                  affected_items:
                    - filters:
                        name: agent_name
                      config:
                        localfile:
                          - location: "/var/log/my.log"
                            log_format: syslog
                    - filters:
                        os: Linux
                      config:
                        localfile:
                          - location: "/var/log/linux.log"
                            log_format: syslog
                    - filters:
                        profile: database
                      config:
                        localfile:
                          - location: "/var/log/database.log"
                            log_format: syslog
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
        - Groups
      summary: "Update group configuration"
      description: "Update an specified group's configuration. This API call expects a full valid YAML file with the
      shared configuration syntax"
      operationId: server_management_api.controllers.agent_controller.put_group_config
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:update_config'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      requestBody:
        required: true
        content:
          application/x-yaml:
            schema:
              properties:
                tmp_file:
                  description: "File to update"
                  type: string
      responses:
        '200':
          description: "Upload configuration"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent configuration was successfully updated
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  # TODO: requires renaming
  /manager/version/check:
    get:
      deprecated: true
      summary: "Check available updates"
      description: "Return if there is any available update"
      operationId: server_management_api.controllers.manager_controller.check_available_version
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/force_query'
      responses:
        '200':
          description: "Information about available new versions"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NewVersions'
              example:
                data:
                  last_check_date: '2023-10-09T15:39:57.616301+00:00'
                  current_version: v4.8.0
                  update_check: true
                  last_available_major:
                    tag: v5.0.0
                    description: ""
                    title: Wazuh 5.0.0
                    published_date: '2023-10-05T12:48:00Z'
                    semver:
                      major: 5
                      minor: 0
                      patch: 0
                  last_available_minor:
                    tag: v4.9.1
                    description: ""
                    title: Wazuh 4.9.1
                    published_date: '2023-10-05T12:47:00Z'
                    semver:
                      major: 4
                      minor: 9
                      patch: 1
                  last_available_patch:
                    tag: v4.8.2
                    description: ""
                    title: Wazuh 4.8.2
                    published_date: '2023-10-05T12:46:00Z'
                    semver:
                      major: 4
                      minor: 8
                      patch: 2
                  uuid": "edc90f7f-fca4-446c-8985-e69520948e42"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/user/authenticate:
    post:
      tags:
        - Security
      summary: "Login"
      description: "This method should be called to get an API token. This token will expire after
      auth_token_exp_timeout seconds (default: 900). This value can be changed in the API configuration"
      operationId: server_management_api.controllers.security_controller.login_user
      parameters:
        - $ref: '#/components/parameters/raw'
      security:
        - basicAuth: []
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Token'
              example:
                data:
                  token: "<generated_token>"
                  error: 0
            text/plain:
              schema:
                type: string
              example: "<generated_token>"
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/InvalidCredentialsResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/user/authenticate/run_as:
    post:
      tags:
        - Security
      summary: "Login auth_context"
      description: "This method should be called to get an API token using an authorization context body. This token
      will expire after auth_token_exp_timeout seconds (default: 900). This value can be changed using PUT
      /security/config"
      operationId: server_management_api.controllers.security_controller.run_as_login
      parameters:
        - $ref: '#/components/parameters/raw'
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              name: "Initial_auth"
              auth:
                name: "Wazuh"
                office:
                  - "20"
                  - "21"
                  - "30"
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                data:
                  token: "<generated_token>"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/InvalidCredentialsResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'


externalDocs:
  description: "Learn more about the Wazuh API"
  url: 'https://documentation.wazuh.com/6.0/user-manual/api/index.html'
